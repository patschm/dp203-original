{
	"name": "M3_2_1 Transform with Spark",
	"properties": {
		"folder": {
			"name": "Module 3.2"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "c2710621-72ae-4307-88be-09a68f0ba3fc"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Globals"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"global lakepath\r\n",
					"lakepath = 'abfss://files@patsynapselake.dfs.core.windows.net/sales100/'"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Transform and Save"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"df = spark.read.csv(lakepath + 'csv/customers.csv', header=True, inferSchema=True)\r\n",
					"\r\n",
					"tran = df.withColumn(\"FullName\", concat(col(\"FirstName\") + lit(\" \") + col(\"LastName\")))\r\n",
					"tran = tran.drop(\"FirstName\", \"LastName\")\r\n",
					"display(tran)\r\n",
					"         \r\n",
					"tran.write.mode(\"overwrite\").parquet(lakepath + \"transformed_park\")\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Partition Data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"df = spark.read.csv(lakepath + 'csv/orders.csv', header=True, inferSchema=True)\r\n",
					"dated = df.withColumn(\"Year\", year(col(\"OrderDate\")))\r\n",
					"\r\n",
					"dated.write.partitionBy(\"Year\"),mode(\"overwrite\").parquet(lakepath + \"/partition_data\")\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Read partitioned data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = spark.read.parquet(lakepath + \"/partition_data/Year=2022\")\r\n",
					"display(df)"
				],
				"execution_count": null
			}
		]
	}
}